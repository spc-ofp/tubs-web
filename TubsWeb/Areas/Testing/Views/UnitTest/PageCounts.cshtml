<div id="qunit"></div>
<div id="qunit-fixture"></div>

@Html.ActionLink("Back to Tests", "Index", "UnitTest")

@section ScriptsUnderTest {
    @* Scripts under test *@
    <script src="~/Scripts/App/vm.pagecounts.js"></script>
}

@section TestData {
    <script>
        var modelAsJson = {
            "TripId": 12345,
            "TripNumber": "DJB / 10-01",
            "PageCounts": [
              {
                  "Id": 1,
                  "Key": "PS1",
                  "Value": 3,
                  "_destroy": false
              },
              {
                  "Id": 2,
                  "Key": "PS2",
                  "Value": 29,
                  "_destroy": false
              },
              {
                  "Id": 3,
                  "Key": "PS3",
                  "Value": 17,
                  "_destroy": false
              },
              {
                  "Id": 4,
                  "Key": "GEN1",
                  "Value": 1,
                  "_destroy": false
              },
              {
                  "Id": 5,
                  "Key": "GEN2",
                  "Value": 2,
                  "_destroy": false
              },
              {
                  "Id": 6,
                  "Key": "PS4",
                  "Value": 15,
                  "_destroy": false
              },
              {
                  "Id": 7,
                  "Key": "PS5",
                  "Value": 1,
                  "_destroy": false
              },
              {
                  "Id": 8,
                  "Key": "PS1",
                  "Value": 8,
                  "_destroy": false
              },
              {
                  "Id": 9,
                  "Key": "GEN3",
                  "Value": 1,
                  "_destroy": false
              }
            ],
            "FormKeys": [
              "",
              "PS1",
              "PS2",
              "PS3",
              "PS4",
              "PS5",
              "GEN1",
              "GEN2",
              "GEN3",
              "GEN5",
              "GEN6",
              "LL1",
              "LL2",
              "LL3/4"
            ]
        };
    </script>
}

@section TestScript {
    @* Unit tests here *@
    <script>
        var viewmodel;
        module("Page Counts", {
            setup: function () {
                viewmodel = new tubs.PageCountViewModel(modelAsJson);
            },
            teardown: function () {
                viewmodel = null;
            }
        });
        test("Create viewmodel", function () {
            ok(viewmodel, "ViewModel not null");
            equal(viewmodel.TripNumber(), "DJB / 10-01", "TripNumber correct");
        });
        test("Async commands", function () {
            ok(!viewmodel.saveCommand.canExecute(), "No save possible on clean model");
            ok(!viewmodel.reloadCommand.canExecute(), "No reload possible on clean model");
            viewmodel.PageCounts()[0].Value(0);
            ok(viewmodel.saveCommand.canExecute(), "Save possible on dirty model");
            ok(viewmodel.reloadCommand.canExecute(), "Reload possible on dirty model");
        });
        test("Remove existing PageCount", function () {
            ok(!viewmodel.isDirty(), "viewmodel is clean");
            equal(viewmodel.PageCounts().length, 9, "9 PageCount models associated with trip");
            var pc = viewmodel.PageCounts()[0];
            viewmodel.removePageCount(pc);
            ok(viewmodel.isDirty(), "viewmodel is dirty");
            equal(viewmodel.PageCounts().length, 9, "9 PageCount models associated with trip");
        });
        test("Add/remove new PageCount", function () {
            ok(!viewmodel.isDirty(), "viewmodel is clean");
            viewmodel.addPageCount();
            ok(viewmodel.isDirty(), "viewmodel is dirty");
            equal(viewmodel.PageCounts().length, 10, "10 PageCount models associated with trip");
            var pc = viewmodel.PageCounts().slice(-1)[0];
            ok(pc.NeedsFocus(), "New PageCount has focus");
            viewmodel.removePageCount(pc);
            equal(viewmodel.PageCounts().length, 9, "9 PageCount models associated with trip");
        });
    </script>
}
