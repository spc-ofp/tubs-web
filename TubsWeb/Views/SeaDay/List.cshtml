@model IEnumerable<Spc.Ofp.Tubs.DAL.Entities.SeaDay>
@using Spc.Ofp.Tubs.DAL.Entities

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), ViewBag.TripNumber as string),
        Tuple.Create("#", "Sea Days")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@{ Html.RenderPartial("_SeaDays", Model); }

@if (0 == Model.Count())
{
    var options = new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "autoFillResults", OnFailure = "onAutoFail", OnSuccess = "onAutoSuccess" };
    <div id="noDaysDiv">
        <p>
            No days recorded. @Html.ActionLink("Auto fill days?", "AutoFill", new { tripId = ViewBag.TripId }, new { id = "autoFill" })
        </p>
    </div>
    <div id="autoFillResults"></div>
    
}
else if (!ViewBag.IsReadOnly)
{
    // TODO Better test isn't .IsReadOnly, but .IsReadOnly and HasAllDays:  If there's a sea day for every day between the beginning and end, don't show this?
    var options = new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "seaDayTable", OnSuccess = "onAddSuccess", OnFailure = "onAddFail" };
    using (Ajax.BeginForm("AddItem", null, options, new { @class = "well", id = "addDayForm" }))
    {
        @Html.ValidationSummary(false)
        <fieldset>
            <legend>Add Day</legend>
            @{ var day = new PurseSeineSeaDay(); }
            @Html.HiddenFor(d => day.Id)

            @* TODO Autofill this and UTC for next day? *@
            @Html.LabelFor(d => day.StartOfDay)
            @Html.TextBoxFor(d => day.StartOfDay, new { @class="datetime" })

            @Html.LabelFor(d => day.UtcStartOfDay)
            @Html.TextBoxFor(d => day.UtcStartOfDay, new { @class = "datetime" })

            @Html.LabelFor(d => day.FloatingObjectsNoSchool)
            @Html.TextBoxFor(d => day.FloatingObjectsNoSchool)
            @Html.ValidationMessageFor(d => day.FloatingObjectsNoSchool)

            @Html.LabelFor(d => day.FloatingObjectsWithSchool)
            @Html.TextBoxFor(d => day.FloatingObjectsWithSchool)
            @Html.ValidationMessageFor(d => day.FloatingObjectsWithSchool)

            @Html.LabelFor(d => day.FadsNoSchool)
            @Html.TextBoxFor(d => day.FadsNoSchool)
            @Html.ValidationMessageFor(d => day.FadsNoSchool)

            @Html.LabelFor(d => day.FadsWithSchool)
            @Html.TextBoxFor(d => day.FadsWithSchool)
            @Html.ValidationMessageFor(d => day.FadsWithSchool)

            @Html.LabelFor(d => day.FreeSchools)
            @Html.TextBoxFor(d => day.FreeSchools)
            @Html.ValidationMessageFor(d => day.FreeSchools)

            @Html.LabelFor(d => day.Gen3Events)
            @Html.TextBoxFor(d => day.Gen3Events)
            @Html.ValidationMessageFor(d => day.Gen3Events)

            @Html.LabelFor(d => day.DiaryPage)
            @Html.TextBoxFor(d => day.DiaryPage)
            @Html.ValidationMessageFor(d => day.DiaryPage)

            <div class="btn-group">
                <input type="submit" name="Save" value="Save" class="btn-primary" />
                <input type="reset" name="Cancel" />
            </div>
        </fieldset>
    }
}

@section AdditionalScripts {
    @{ Html.RenderPartial("_DateTimePickerInit"); }

    <script type="text/javascript">
        function onAddFail(xhr, status, error) {
            $.meow({
                title: 'Failed to add new day',
                message: error,
                icon: '@Url.Content("~/Content/images/nyan-cat.gif")'
            });
        }

        function onAddSuccess(data, status, xhr) {
            /* Nothing hidden, so use the original 'clearForm' to leave the numeric Id hidden input */
            clearForm('#addDayForm');

            $('#day_StartOfDay').focus();
            $.meow({
                message: 'New day added',
                icon: '@Url.Content("~/Content/images/nyan-cat.gif")'
            });
        }

        function onAutoFail(xhr, status, error) {
            alert("Epic fail");
        }

        function onAutoSuccess(data, status, xhr) {
            alert("It worked?");
        }
    </script>

    <script type="text/javascript">
        $(function () {
            $('#autoFill').click(function () {
                $.ajax({
                    url: this.href,
                    type: 'POST',
                    success: onAutoSuccess
                });
                return false;
            });
        });
    </script>
}
