@model Spc.Ofp.Tubs.DAL.Entities.SeaDay

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), Model.Trip.SpcTripNumber ?? "This Trip"),
        Tuple.Create(Url.Action("List", "SeaDay", new { tripId = ViewBag.TripId }), "Sea Days"),
        Tuple.Create("#", String.Format("Day {0} of {1}", ViewBag.CurrentDay, ViewBag.MaxDays))
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<ul class="pager">
    @if (ViewBag.CurrentDay > 1) {
        <li>
            <a href='@Url.RouteUrl("SeaDayDetails", new { tripId = ViewBag.TripId, dayNumber = ViewBag.CurrentDay - 1 })'>Previous Day</a>
        </li>
    }
    
    @if(ViewBag.MaxDays > ViewBag.CurrentDay) {
        <li>
            <a href='@Url.RouteUrl("SeaDayDetails", new { tripId = ViewBag.TripId, dayNumber = ViewBag.CurrentDay + 1 })'>Next Day</a>
        </li>
    }
</ul>

<!-- Add Sea days and sets for PS trips -->
@if (null == Model)
{
    <text>No day found</text>
}
else if (Model.GetType() == typeof(Spc.Ofp.Tubs.DAL.Entities.PurseSeineSeaDay))
{
    var psday = Model as Spc.Ofp.Tubs.DAL.Entities.PurseSeineSeaDay;
    <table class="table table-bordered table-condensed table-striped">
      <thead>
          <tr>
            <th>Ship's Time</th>
            <th>Position</th>
            <th>EEZ</th>
            <th>Activity</th>
            <th>Wind Speed/Direction</th>
            <th>Sea</th>
            <th>Detection Method</th>
            <th>Association</th>
            <th>Comments</th>
          </tr>
      </thead>
      <tbody>
      @foreach (var entry in psday.Activities)
      {
          @Html.DisplayFor(m => entry)
      }
      </tbody>
    </table>
    
    <p>TODO:  Add color coded dots to the activity column that match the pins in the map?  Or just color code the rows for significant events?</p>
    <p>TODO:  Add in a hideable map for just this day.  Bonus points for overlaying observer, VMS, and logsheet data.</p>
}
else
{
    <p>
        Start of day: @Html.DisplayFor(m => Model.StartOfDay) <br />
        Start of day (UTC): @Html.DisplayFor(m => Model.UtcStartOfDay)
    </p>
}
