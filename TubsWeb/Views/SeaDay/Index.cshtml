@model TubsWeb.ViewModels.SeaDayViewModel

@{
    ViewBag.Title = string.Format("Day {0} of {1} for {2}", Model.DayNumber, Model.MaxDays, Model.TripNumber);
}

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = Model.TripId }), Model.TripNumber ?? "This Trip"),
        Tuple.Create(Url.Action("List", "SeaDay", new { tripId = Model.TripId }), "Sea Days"),
        Tuple.Create("#", String.Format("Day {0} of {1}", Model.DayNumber, Model.MaxDays))
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<ul class="pager">
    @if (Model.HasPrevious)
    {
        <li>
            <a href='@Url.RouteUrl(TubsWeb.RouteConfig.SeaDays, new { tripId = Model.TripId, dayNumber = Model.PreviousDay, action = "Index" })'>Previous Day</a>
        </li>
    }
    
    @if (Model.HasNext)
    {
        <li>
            <a href='@Url.RouteUrl(TubsWeb.RouteConfig.SeaDays, new { tripId = Model.TripId, dayNumber = Model.NextDay, action = "Index" })'>Next Day</a>
        </li>
    }
</ul>

<!-- Add Sea days and sets for PS trips -->
@if (Model.IsEmpty)
{
    @: No PS-2 data for this day and trip.
}
else
{
    <fieldset>
        @* TODO: Rationalize this with the rest of the fluid rows (label/span) *@
        <legend>Start of Day</legend>
        <div class="row">
            <div class="span3">
                <strong>Ship's Date:</strong> @Html.DisplayFor(m => Model.ShipsDate, new { format = "d" })
            </div>
            <div class="span3">
                <strong>Ship's Time:</strong> @Model.ShipsTime
            </div>
        </div>
        <div class="row">
            <div class="span3">
                <strong>UTC Date:</strong> @Html.DisplayFor(m => Model.UtcDate, new { format = "d" })
            </div>
            <div class="span3">
                <strong>UTC Time:</strong> @Model.UtcTime
            </div>
        </div>
    </fieldset>
    <br />
    <fieldset>
        <legend>Floating Object and School Sightings</legend>
        <div class="row">
            <div class="span4">Anchored objects <strong>NO</strong> school: @Html.DisplayFor(m => Model.AnchoredWithNoSchool)</div>
            <div class="span4">Anchored objects <strong>with</strong> school: @Html.DisplayFor(m => Model.AnchoredWithSchool)</div>
        </div>
        <div class="row">
            <div class="span4">Floating objects <strong>NO</strong> school: @Html.DisplayFor(m => Model.FreeFloatingWithNoSchool)</div>
            <div class="span4">Floating objects <strong>with</strong> school: @Html.DisplayFor(m => Model.FreeFloatingWithSchool)</div>
        </div>
        <div class="row">
            <div class="span4">Free schools: @Html.DisplayFor(m => Model.FreeSchool)</div>
        </div>
    </fieldset>
    <fieldset>
        <legend>GEN-3 Events</legend>
        <div class="row">
            <div class="span4">Observed event recorded on GEN-3? @Html.DisplayFor(m => Model.HasGen3Event)</div>
            <div class="span4">Diary Page: @(Model.DiaryPage ?? "N/A")</div>
        </div>
    </fieldset>
    <br />
    @* TODO:  It would be nice to fix the widths of the columns *@
    <table class="table table-bordered table-condensed table-striped">
      <thead>
          <tr>
            <th>Ship's Time</th>
            <th>Position</th>
            <th>EEZ</th>
            <th>Activity</th>
            <th>Wind Speed/Direction</th>
            <th>Sea</th>
            <th>Detection Method</th>
            <th>Association</th>
            <th>Comments</th>
            <th class="nobr">GEN-5</th>
          </tr>
      </thead>
      <tbody>
      @foreach (var entry in Model.Events)
      {
          <tr>
            <td>@entry.Time</td>
            <td>@entry.Latitude / @entry.Longitude</td>
            <td>@entry.EezCode</td>
            <td>@entry.ActivityCode</td>
            <td>@Html.Raw(entry.SpeedAndDirection)</td>
            <td>@entry.SeaCode</td>
            <td>@entry.DetectionCode</td>
            <td>@entry.AssociationCode</td>
            <td>@entry.Comments</td>
            <td>
                @if (entry.HasGen5)
                {
                    var edit = Url.Action("Edit", "Gen5", new { tripId = Model.TripId, fadId = entry.Gen5Id });
                    var details = Url.Action("Details", "Gen5", new { tripId = Model.TripId, fadId = entry.Gen5Id });
                    <a href='@edit'>Edit</a> @:| <a href='@details'>Details</a>
                }
                else
                {
                    var add = Url.Action("Add", "Gen5", new { tripId = Model.TripId, activityId = entry.EventId });
                    <a href='@add'>Add</a>
                }
            </td>
        </tr>
      }
      </tbody>
    </table>
    
      if (!ViewBag.IsReadOnly)
      {
        @Html.ActionLink("Edit daily log", "Edit", "SeaDay", new { tripId = ViewBag.TripId, dayNumber = Model.DayNumber }, null)
      }
    
    @*TODO:  Add color coded dots to the activity column that match the pins in the map?  Or just color code the rows for significant events?*@
    @*TODO:  Add in a hideable map for just this day.  Bonus points for overlaying observer, VMS, and logsheet data.*@
}
