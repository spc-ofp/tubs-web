@model TubsWeb.ViewModels.SeaDayViewModel
@using Newtonsoft.Json

@* 
    This partial depends on a bunch of other JavaScript already being loaded
    (like jQuery, knockout, knockout extensions, etc.)
*@
<!-- ISODate extension -->
<script src="~/Scripts/knockout.custom-bindings.js"></script>
<!-- String hashCode implementation -->
<script src="~/Scripts/spc.utilities.js"></script>

<!-- Ajax data layer -->
<script src="~/Scripts/App/errorlogger.js"></script>
<script src="~/Scripts/App/datacontext.js"></script>
<script src="~/Scripts/App/vm.seaday.js"></script>
@* TODO  Look into validation:  http://blog.duc.as/tag/mvc-4/ *@
@* After much tail-chasing, the best way to handle VMs with dates is to ash-can the Microsoft converter and use NewtonSoft's *@
@{ var modelAsJson = Html.Raw(JsonConvert.SerializeObject(Model)); }
<script>
    $(document).ready(function () {
        var viewModel = new tubs.psSeaDay(@modelAsJson);
        viewModel.clearDirtyFlag();
        ko.applyBindings(viewModel);
        // After page load, focus on the 'Ship's Time' field
        $("#ShipsTime").focus();
        $(".ps2events").on("click", ".removeItem", function() {
            viewModel.removeEvent(ko.dataFor(this));
        });
        $(".ps2events").on("click", ".addItem", function() {
            viewModel.addEvent();
        });
        /* For some reason I was getting a call to the add event just during the evaluation of this binding... */
        $("#btnAddWhenEmpty").on("click", function () {
            viewModel.addEvent();
        });

        /*
        // Auto-advance not working as I'd expect it.  FIDO
        $("#seaDayForm").on("keyup", ".advance", function () {
            if ($(this).val().length == $(this).attr('maxlength'))
                $(this).next(':input').focus();
        });
        */

        // PageGuide initialization
        tl.pg.init();

        /* TODO: Extract this into a common script for the whole application */
        window.onbeforeunload = function(e) {
            if (viewModel.isDirty())
            {
                if (!e) e = window.event;
                // IE only?
                e.cancelBubble = true;
                e.returnValue = "Leaving the page will discard unsaved changes.";
                // Firefox?
                if (e.stopPropagation)
                {
                    e.stopPropagation();
                    e.preventDefault();
                }

                return "Leaving the page will discard unsaved changes.";
            }
        };            
    });
</script>