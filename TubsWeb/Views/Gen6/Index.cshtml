@model Spc.Ofp.Tubs.DAL.Entities.PollutionEvent
@using Spc.Ofp.Tubs.DAL.Common

@helper SpeedAndDirection(int? speed, int? direction) {
    if (!speed.HasValue && !direction.HasValue) {
        <text>N/A</text> 
    } else {
        var sb = new System.Text.StringBuilder();
        sb.Append(speed.HasValue ? speed.Value.ToString() : "UNK");
        sb.Append(" kts @ ");
        sb.Append(direction.HasValue ? direction.Value.ToString() : "UNK");
        sb.Append("&deg;");        
        @Html.Raw(sb.ToString()) 
    }
}

<h2>@ViewBag.Title</h2>

<p>
@{
    if (ViewBag.CurrentPage > 1) {
        <a href='@Url.RouteUrl("Gen6Details", new { tripId = ViewBag.TripId, pageNumber = ViewBag.CurrentPage - 1 })'>Previous Page</a>
    }

    if (ViewBag.MaxPages > ViewBag.CurrentPage)
    {
        <a href='@Url.RouteUrl("Gen6Details", new { tripId = ViewBag.TripId, pageNumber = ViewBag.CurrentPage + 1 })'>Next Page</a>
    }
}
</p>

@if (null == Model)
{
<p>
    No such GEN-6 page for this trip.
</p>
}
else
{
    @* TODO Change to label/value layout (like PurseSeineGear.cshtml) *@
    <fieldset>
        <legend>Incident Details</legend>
         @* TODO Add current (knots and direction), observer's vessel activity, ircs, vessel type, and relative location *@
        @Html.LabelFor(m => m.IncidentDate) @Html.DisplayFor(m => m.IncidentDate) <br />
        <label>Position</label> @Model.Latitude / @Model.Longitude (@Model.EezId) <br />
        <label>Wind Conditions</label> @SpeedAndDirection(Model.WindSpeed, Model.WindDirection) <br />
        @Html.LabelFor(m => m.SeaCode) @Html.DisplayFor(m => m.SeaCode) <br />
        <label>Offending Vessel</label> @Html.DisplayFor(m => m.VesselName) <br />
        <label>MARPOL Stickers/Posters on display?</label> @Html.DisplayFor(m => m.MarpolStickers) <br />
        <label>Was captain aware of MARPOL Regulations?</label> @Html.DisplayFor(m => m.CaptainAware) <br />
        <label>Was captain advised of MARPOL infringements?</label> @Html.DisplayFor(m => m.CaptainAdvised) <br />
        <label>Were photos taken?</label>
        @Html.DisplayFor(m => m.PhotosTaken)
        @if (!String.IsNullOrEmpty(Model.PhotoFrames))
        {
            <text>(@Model.PhotoFrames)</text>
        }
        <br />
        @Html.LabelFor(m => m.Comments) @Html.DisplayFor(m => m.Comments)
    </fieldset>
    
    @*  Create two additional fieldsets, one for waste dumped overboard and another for oil spills/leaks *@
    var waste = from d in Model.Details where d.PollutionType == PollutionType.DumpedOverboard select d;
    var spills = from d in Model.Details where d.PollutionType == PollutionType.SpillageOrLeakage select d;

    if (waste.Count() > 0)
    {
    <fieldset>
        <legend>Waste Dumped Overboard</legend>
        <table>
            <thead>
                <tr>
                    <th>Material</th>
                    <th>Type Description</th>
                    <th>Quantity Description</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in waste)
            {
                <tr>
                    <td>@item.Material</td>
                    <td>@item.Description</td>
                    <td>@item.Quantity</td>
                </tr>
            }
            </tbody>
        </table>
    </fieldset>
    }

    if (spills.Count() > 0)
    {
    <fieldset>
        <legend>Oil Spillages and Leakages</legend>
        <table>
            <thead>
                <tr>
                    <th>Source</th>
                    <th>Visual Appearance / Colour</th>
                    <th>Area and Quantity</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in spills)
            {
                <tr>
                    <td>@item.Material</td>
                    <td>@item.Description</td>
                    <td>@item.Quantity</td>
                </tr>
            }
            </tbody>
        </table>
    </fieldset>
    }
}

<p>
    @Html.ActionLink("Back to GEN-6 Events", "List", "Gen6", new { tripId = ViewBag.TripId }, null) |
    <a href='@Url.RouteUrl("TripDetails", new { tripId = ViewBag.TripId })'>Back to Trip</a>
</p>