@model Spc.Ofp.Tubs.DAL.Entities.SafetyInspection

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), ViewBag.TripNumber as string),
        Tuple.Create("#", "Safety Inspection")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@if (null == Model)
{
    <p>
        No safety inspection details available for this trip.
    </p>
}
else
{
    <fieldset>
        <legend>Lifejacket and Buoys</legend>
        <div class="row">
            <div class="span4">@Html.LabelFor(m => m.LifejacketProvided)</div>
            <div class="span2">@Html.DisplayFor(m => m.LifejacketProvided)</div>
        </div>
        <div class="row">
            <div class="span4">@Html.LabelFor(m => m.LifejacketSizeOk)</div>
            <div class="span2">@Html.DisplayFor(m => m.LifejacketSizeOk)</div>
        </div>
        <div class="row">
            <div class="span4">@Html.LabelFor(m => m.LifejacketAvailability)</div>
            <div class="span2">@Html.DisplayFor(m => m.LifejacketAvailability)</div>
        </div>
        <div class="row">
            <div class="span4">@Html.LabelFor(m => m.BuoyCount)</div>
            <div class="span2">@Html.DisplayFor(m => m.BuoyCount)</div>
        </div>
    </fieldset>
    <br />
    if (Model.Epirb1.BeaconType != null || Model.Epirb1.Expiration != null || Model.Epirb1.Count.HasValue)
    {
    <fieldset>
        <legend>EPIRB #1</legend>
        @Html.DisplayFor(m => m.Epirb1)       
    </fieldset>
    <br />
    }
    if (Model.Epirb2.BeaconType != null || Model.Epirb2.Expiration != null || Model.Epirb2.Count.HasValue)
    {
    <fieldset>
        <legend>EPIRB #2</legend>
        @Html.DisplayFor(m => m.Epirb2)       
    </fieldset>
    <br />
    }

    if (0 == Model.LifeRafts.Count())
    {
        <p>No liferaft data available.</p>
    }
    else
    {
        <fieldset>
        <legend>Liferafts</legend>
            <table class="table table-striped table-bordered table-condensed" style="width: auto;">
                <thead>
                    <tr>
                        <th>@Html.LabelFor(m => m.Raft1.Capacity)</th>
                        <th>@Html.LabelFor(m => m.Raft1.InspectionDate)</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var raft in Model.LifeRafts)
                {
                   <tr>
                        <td>@Html.DisplayFor(r => raft.Capacity)</td>
                        <td>
                            @Html.DisplayFor(r => raft.InspectionDate, new { format = "MM/yy" })
                            @switch (raft.LastOrDue)
                            {
                                case 'L':
                                    <text>(Last)</text>
                                    break;
                                case 'D':
                                    <text>(Due)</text>
                                    break;
                                default:
                                    break;
                            }
                        </td>
                   </tr>     
                }   
                </tbody>
            </table>
        </fieldset>
    }
}
<br />
