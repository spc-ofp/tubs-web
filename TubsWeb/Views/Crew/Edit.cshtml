@model TubsWeb.Models.CrewViewModel
@using TubsWeb.Models

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), Model.TripNumber),
        Tuple.Create(Url.Action("Index", "Crew", new { tripId = ViewBag.TripId }), "Crew"),
        Tuple.Create("#", "Edit Crew")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@{
    IList<Tuple<string, CrewViewModel.CrewMemberModel>> namedJobs = new List<Tuple<string, CrewViewModel.CrewMemberModel>>()
    {
        Tuple.Create("Captain", Model.Captain),
        Tuple.Create("Navigator", Model.Navigator),
        Tuple.Create("Mate", Model.Mate),
        Tuple.Create("ChiefEngineer", Model.ChiefEngineer),
        Tuple.Create("AssistantEngineer", Model.AssistantEngineer),
        Tuple.Create("DeckBoss", Model.DeckBoss),
        Tuple.Create("Cook", Model.Cook),
        Tuple.Create("HelicopterPilot", Model.HelicopterPilot),
        Tuple.Create("SkiffMan", Model.SkiffMan),
        Tuple.Create("WinchMan", Model.WinchMan),
    };
}

@*  TODO Still need to add a UI surface for the unobtrusive validation *@
@*  Looks like I'll have to hook form submit per here: 
    http://weblogs.asp.net/imranbaloch/archive/2011/03/05/unobtrusive-client-side-validation-with-dynamic-contents-in-asp-net-mvc.aspx 
    See also this StackOverflow:  http://stackoverflow.com/questions/8538082/asp-net-mvc-3-required-steps-for-unobtrusive-client-side-validation-of-dynamic
*@

<!-- Named crew -->
<fieldset>
    <legend>Senior Crew</legend>
    <table class="table table-striped table-bordered table-condensed">
        <thead>
            <tr>
                <th>Job</th>
                <th>Name</th>
                <th>Experience</th>
                <th>Nationality</th>
                <th>Comments</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var namedJob in namedJobs)
        {
            var njoptions = new AjaxOptions { HttpMethod = "Post", UpdateTargetId = namedJob.Item1, OnSuccess = "onSaveSuccess", OnFailure = "onSaveFail" };
            using (Ajax.BeginForm("EditSingle", njoptions))
            {
            <tr id='@namedJob.Item1'>
                @Html.EditorFor(m => namedJob.Item2)
            </tr>
            }
        }
        </tbody>
    </table>
</fieldset>

<br />

@*  See this link about adding an HTML5 confirm prompt: *@
@* http://forums.asp.net/t/1652312.aspx/1?MVC+3+razor+grid+using+edit+and+delete+buttons *@
<!-- The rest of the hands -->
<fieldset>
    <legend>Other Crew</legend>
    @{ Html.RenderPartial("~/Views/Crew/OtherCrew.cshtml", Model.Hands); }
</fieldset>

@* TODO Change this to a modal dialog *@
<fieldset>
    <legend>Add New Deckhand</legend>
    @{ var options = new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "deckHands", OnSuccess = "onAddSuccess", OnFailure = "onAddFail" };  }
    @using (Ajax.BeginForm("AddDeckHand", null, options, new { @class = "well", id = "addHandForm" }))
    {
        @Html.ValidationSummary(false)
        var hand = new CrewViewModel.CrewMemberModel(Spc.Ofp.Tubs.DAL.Common.JobType.Crew);
        @Html.HiddenFor(m => hand.Id)
        @Html.HiddenFor(m => hand.Job)
        @Html.LabelFor(m => hand.Name)
        @Html.TextBoxFor(m => hand.Name)
        @Html.ValidationMessageFor(m => hand.Name)
 
        @Html.Label("Experience")
        @Html.TextBoxFor(m => hand.Years, new { style = "width: 50px;" }) <text>years</text> 
        @Html.TextBoxFor(m => hand.Months, new { style = "width: 50px;" }) <text>months</text>
        @Html.ValidationMessageFor(m => hand.Years)
        @Html.ValidationMessageFor(m => hand.Months)

        @Html.LabelFor(m => hand.Nationality)
        @Html.TextBoxFor(m => hand.Nationality, new { style = "width: 50px;" })
        @Html.ValidationMessageFor(m => hand.Nationality)

    
        <p>
            <input type="submit" name="Add" value="Add" class="btn btn-primary" />
            <input type="reset" name="Cancel" class="btn" />
        </p>
    }
</fieldset>

@section AdditionalScripts {
    <script src="@Url.Content("~/Scripts/jquery.meow.js")" type="text/javascript"></script>

    <script type="text/javascript">
        function onSaveSuccess(data, status, xhr) {
            $.meow({
                message: 'Crewmember saved',
                icon: '@Url.Content("~/Content/images/nyan-cat.gif")'
            });
        }

        function onSaveFail(xhr, status, error) {
            $.meow({
                title: 'Failed to save crewmember',
                message: error,
                icon: '@Url.Content("~/Content/images/nyan-cat.gif")'
            });
        }

        function onAddFail(xhr, status, error) {
            $.meow({
                title: 'Failed to add crewmember',
                message: error,
                icon: '@Url.Content("~/Content/images/nyan-cat.gif")'
            });
        }

        function onAddSuccess(data, status, xhr) {
            /* Better to clear the text boxes only...*/
            clearFormEx('#addHandForm');
            $('#hand_Name').focus();
            $.meow({
                message: 'Crewmember added',
                icon: '@Url.Content("~/Content/images/nyan-cat.gif")'
            });
        }
    </script>
}
