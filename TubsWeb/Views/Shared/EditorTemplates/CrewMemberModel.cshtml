@model TubsWeb.Models.CrewViewModel.CrewMemberModel
@using Spc.Ofp.Tubs.DAL.Common

@*
   The trick for fixing field prefixes comes from here:
   http://davybrion.com/blog/2011/01/prefixing-input-elements-of-partial-views-with-asp-net-mvc/

   The author writes a long, involved bit of code, at which point a commenter points out that
   setting HtmlFieldPrefix does the same thing.
*@

@{ ViewData.TemplateInfo.HtmlFieldPrefix = String.Empty; }

<td>
    @Html.HiddenFor(m => Model.Id)
    @Html.HiddenFor(m => Model.Job)
    @Model.Job.GetDescription()
</td>
<td>@Html.TextBoxFor(m => Model.Name, new { style = "width: 95%" })</td>
<td>@Html.TextBoxFor(m => Model.Years, new { style = "width: 50px;" }) years @Html.TextBoxFor(m => Model.Months, new { style = "width: 50px;" }) months</td>
<td>@Html.TextBoxFor(m => Model.Nationality, new { style = "width: 50px;" })</td>
<td>@Html.TextBoxFor(m => Model.Comments, new { style = "width: 95%" })</td>
<td>
    <div class="btn-group">
        <input type="submit" name="Save" value="Save" class="btn-primary" />
        <input type="reset" name="Cancel" />
    </div>
</td>


@* As noted in CrewController, jQuery and MVC have an integration problem with a partial view and embedded JavaScript. *@
@* However, this works out okay, so stick with it for now. *@

@if (ViewData.ContainsKey("modelSaved"))
{
    var modelSaved = (bool)ViewData["modelSaved"];
    if (modelSaved)
    {
        <script type="text/javascript">
            //alert('Save successful');
            notify('Save successful');
        </script>
    }
    else
    {
        <script type="text/javascript">
            // TODO Add a different style
            alert('Save failed.  Contact support.');
        </script>
    }
}