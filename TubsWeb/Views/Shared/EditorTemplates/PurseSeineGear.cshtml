@model Spc.Ofp.Tubs.DAL.Entities.PurseSeineGear

@if (ViewData["flash"] != null)
{
    var alertLevel = ViewData["flash-level"] ?? "alert-error";
<div class="alert @alertLevel">
    @ViewData["flash"]
</div>
}

@using (Html.BeginForm())
{ 
    @Html.ValidationSummary(true, "Save failed")
    @* TODO Figure out which one of these we really need... *@
    <input type="hidden" name="gearType" value="@typeof(Spc.Ofp.Tubs.DAL.Entities.PurseSeineGear)" />
    @Html.Hidden("gearType", typeof(Spc.Ofp.Tubs.DAL.Entities.PurseSeineGear));
    <fieldset>
        <legend>Powerblock</legend>
        @Html.LabelFor(m => m.PowerblockMake)  @Html.EditorFor(m => m.PowerblockMake)  <br />
        @Html.LabelFor(m => m.PowerblockModel) @Html.EditorFor(m => m.PowerblockModel) <br />
        @Html.LabelFor(m => m.PowerblockPower) @Html.EditorFor(m => m.PowerblockPower) <br />
        @Html.LabelFor(m => m.PowerblockSpeed) @Html.EditorFor(m => m.PowerblockSpeed)
    </fieldset>

    <fieldset>
        <legend>Purse Winch</legend>
        @Html.LabelFor(m => m.PurseWinchMake)  @Html.EditorFor(m => m.PurseWinchMake)  <br />
        @Html.LabelFor(m => m.PurseWinchModel) @Html.EditorFor(m => m.PurseWinchModel) <br />
        @Html.LabelFor(m => m.PurseWinchPower) @Html.EditorFor(m => m.PurseWinchPower) <br />
        @Html.LabelFor(m => m.PurseWinchSpeed) @Html.EditorFor(m => m.PurseWinchSpeed)
    </fieldset>

    @* FIXME Need to fix the database, TUBS, and the DAL to manage these units correctly *@
    <fieldset>
        <legend>Net</legend>
        @Html.LabelFor(m => m.NetDepth) @Html.EditorFor(m => m.NetDepth) @Html.EditorFor(m => m.NetDepthUnit) <br />
        @Html.LabelFor(m => m.NetLength) @Html.EditorFor(m => m.NetLength) @Html.EditorFor(m => m.NetLengthUnits) <br />
        @Html.LabelFor(m => m.NetStrips) @Html.EditorFor(m => m.NetStrips) <br />
        @Html.LabelFor(m => m.MeshSize) @Html.EditorFor(m => m.MeshSize) @Html.EditorFor(m => m.MeshSizeUnits)
    </fieldset>

    <fieldset>
        <legend>Brails</legend>
        @Html.LabelFor(m => m.Brail1Size) @Html.EditorFor(m => m.Brail1Size) <br />
        @Html.LabelFor(m => m.Brail2Size) @Html.EditorFor(m => m.Brail2Size) <br />
        @Html.LabelFor(m => m.BrailType) <br />
        @Html.TextAreaFor(m => m.BrailType, new { @cols = 80, @rows = 5 })
    </fieldset>
    
    <p>
        <input type="submit" value="Save" />
        <input type="reset" value="Cancel" />
    </p>
}