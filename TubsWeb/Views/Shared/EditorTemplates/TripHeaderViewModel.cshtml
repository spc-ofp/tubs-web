@model TubsWeb.Models.TripHeaderViewModel

@*
 * After some back and forth, this editor has been configured to look
 * like the form to ease the task of less experienced data-entry staff.
 * Also, to work around a Webkit (Chrome/Safari) bug with date validation
 * dates and times have been split into separate string fields.
 *@

@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.ObserverCode)
@Html.HiddenFor(m => m.DeparturePortCode)
@Html.HiddenFor(m => m.ReturnPortCode)
@Html.HiddenFor(m => m.VesselId)

<div class="row-fluid">
    <div class="span4">
        <label>Program Code</label>
        @Html.DropDownListFor(m => m.ProgramCode, new SelectList(Enum.GetValues(typeof(Spc.Ofp.Tubs.DAL.Common.ObserverProgram))), "Choose")
    </div>
    <div class="span4">
        <label>Country Code</label>
        @Html.TextBoxFor(m => m.CountryCode, new { required = String.Empty, placeholder = "2 character ISO Code" })
    </div>
    <div class="span4">
        <label>Workbook Version</label>
        @Html.DropDownListFor(m => m.Version, new SelectList(Enum.GetValues(typeof(Spc.Ofp.Tubs.DAL.Common.WorkbookVersion))), "Choose")
    </div>
</div>

<div class="row-fluid">
    <div class="span4">
        <label>Observer Name</label>      
        @Html.TextBoxFor(
            m => m.ObserverFullName, 
            new { 
                required = String.Empty, 
                data_val = "true",
                data_val_required = "Observer is required",
                placeholder = "Enter the observer's name" })
    </div>
    <div class="span4">
        <label>Departure Port</label> 
        @Html.TextBoxFor(
            m => m.DeparturePortName, 
            new { 
                required = String.Empty, 
                placeholder = "Enter departure port", 
                data_val = "true",
                data_val_required="Departure Port is required" })
    </div>
    <div class="span2">
        <label>Start Date</label>
        <div class="input-append">
            @Html.TextBoxFor(
                m => Model.DepartureDateOnly,
                new {
                    @class = "input-mini datepicker",
                    data_date_format="dd/mm/yy",
                    placeholder = "dd/mm/yy",
                    required = string.Empty,
                    data_val = "true",
                    data_val_required = "Start Date is required"})
            <span class="add-on"><i class="icon-calendar"></i></span>
        </div>
    </div>
    <div class="span2">
        <label>Start Time</label>
        <div class="input-append">
            @Html.TextBoxFor(
                m => Model.DepartureTimeOnly,
                new {
                    placeholder = "HHmm",
                    @class = "input-mini"
                })
            <span class="add-on"><i class="icon-time"></i></span>
        </div>   
    </div>
</div>

<div class="row-fluid">
    <div class="span4">
        <label>Trip ID Number</label>
        @Html.TextBoxFor(m => m.TripNumber, new { required = String.Empty , placeholder = "For example, 12-01" })
    </div>
    <div class="span4">
        <label>Return Port</label>        
        @Html.TextBoxFor(
            m => m.ReturnPortName, 
            new { 
                required = String.Empty, 
                placeholder = "Enter return port", 
                data_val = "true",
                data_val_required="Return Port is required" })
    </div>
    <div class="span2">
        <label>End Date</label>
        <div class="input-append">
            @Html.TextBoxFor(
                m => Model.ReturnDateOnly,
                new {
                    @class = "input-mini datepicker",
                    data_date_format="dd/mm/yy",
                    required = string.Empty,
                    placeholder = "dd/mm/yy",
                    data_val = "true",
                    data_val_required = "End Date is required"})
            <span class="add-on"><i class="icon-calendar"></i></span>
        </div>      
    </div>
    <div class="span2">
        <label>End Time</label>
        <div class="input-append">
            @Html.TextBoxFor(
                m => Model.ReturnTimeOnly,
                new {
                    placeholder = "HHmm",
                    @class = "input-mini"
                })
            <span class="add-on"><i class="icon-time"></i></span>
        </div>       
    </div>
</div>

<div class="row-fluid">
    <div class="span4">
        <label>Vessel Name</label>
        @Html.TextBoxFor(
            m => m.VesselName, 
            new { 
                required = String.Empty,
                placeholder = "Enter the vessel's name", 
                data_val = "true",
                data_val_required="Vessel is required" })
    </div>
    <div class="span4">
        <label>Gear Code</label>
        @Html.DropDownListFor(m => m.GearCode, new SelectList(TubsWeb.Models.TripHeaderViewModel.GearTypes, "Code", "Label"), "Choose")
    </div>
</div>