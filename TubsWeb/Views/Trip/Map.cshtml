
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), ViewBag.TripNumber ?? "This Trip"),
        Tuple.Create("#", "Positions")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<div id="map3d" style="width: 800px; height: 600px;"></div>

@section AdditionalScripts {
    <script src="https://www.google.com/jsapi"> </script>
    <script>
        google.load('earth', '1');

        var ge = null;

        function init() {
            google.earth.createInstance('map3d', initCallback, failureCallback);
        }

        function addKmlFromUrl(kmlUrl) {
            var link = ge.createLink('');
            link.setHref(kmlUrl);

            var networkLink = ge.createNetworkLink('');
            networkLink.setLink(link);
            networkLink.setFlyToView(true);

            ge.getFeatures().appendChild(networkLink);
        }

        function initCallback(pluginInstance) {
            ge = pluginInstance;
            ge.getWindow().setVisibility(true);

            // Plugin didn't like loading from a relative URL, so the final param in Url.Action forces
            // creation of a fully qualified URL
            addKmlFromUrl('@Url.Action("Positions", "Trip", new { tripId = ViewBag.TripId }, this.Request.Url.Scheme)');
        }

        function failureCallback() {
            // TODO we can do something here if there's an error
            // toastr notification or Twitter Bootstrap alert?
        }
        $(function () {
            init();
        });
    </script>
}
