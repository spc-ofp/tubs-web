@model TubsWeb.Models.TripHeaderViewModel

@{
    ViewBag.Title = "Register new trip";
}

@if (ViewData["flash"] != null)
{
    var alertLevel = ViewData["flash-level"] ?? "alert-error";
<div class="alert @alertLevel">
    <a class="close" data-dismiss="alert">&times;</a>
    @ViewData["flash"]
</div>
}

@using (Html.BeginForm("Create", "Trip", FormMethod.Post, new { id = "createTripForm", autocomplete = "off" }))
{
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>Register New Trip</legend>
        @Html.EditorFor(m => Model)
        <p>
            <input type="submit" name="Save" value="Save" class="btn btn-primary" />
            <input type="reset" name="Cancel" class="btn" />
        </p>
    </fieldset>  
}

@*
Date validation:
http://byatool.com/ui/jquery-validate-datecheck-if-is-date/
http://blog.jsfmp.com/post/7888992470/jquery-date-validation-really-valid-dates
http://christierney.com/2011/06/30/jquery-validate-better-date-method/
http://keith-wood.name/uiDatepickerValidation.html
http://docs.jquery.com/Plugins/Validation/Methods/date
*@


<ul id="tlyPageGuide" data-tourtitle="Detailed trip registration instructions">
    <!-- First row.  It comes first because this is metadata more than observer data -->
    <li class="tlypageguide_left" data-tourtarget="#ProgramCode">
        <div>
            Enter the program code for the organization that arranged this observer trip.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#CountryCode">
        <div>
            Enter the ISO A2 code for the country for which the trip was undertaken.
            For example, the A2 code for Papua New Guinea is PG.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#Version">
        <div>
            Select the workbook version.
        </div>
    </li>

    <!-- Second row -->
    <li class="tlypageguide_left" data-tourtarget="#ObserverFullName">
        <div>
            Enter the observer's name.  TUBS will filter the list based on what you enter.
            Select the correct observer from the list and use the "Tab" key to move to the next
            field.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#DeparturePortName">
        <div>
            Enter the port name.  TUBS will filter the list based on what you enter.
            Select the correct port from the list and use the "Tab" key to move to the next
            field.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#DepartureDateOnly">
        <div>
            Enter the departure date.  The format for date is dd/mm/yy
            This means that day of the month and month should have a leading zero
            if the value is less than 9 (for example, "09" instead of "9").
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#DepartureTimeOnly">
        <div>
            Enter the departure time using the 24 hour format.  Both the hour and
            minute should have leading zeros for values less than 9 (for example, "09" instead of "9").
        </div>
    </li>

    <!-- Third row -->
    <li class="tlypageguide_left" data-tourtarget="#TripNumber">
        <div>
            Enter the numeric portion of the trip number.  For example, if the
            trip number is "DJB 11-01", enter "11-01".
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#ReturnPortName">
        <div>
            Enter the port name.  TUBS will filter the list based on what you enter.
            Select the correct port from the list and use the "Tab" key to move to the next
            field.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#ReturnDateOnly">
        <div>
            Enter the return date.  The format for date is dd/mm/yy
            This means that day of the month and month should have a leading zero
            if the value is less than 9 (for example, "09" instead of "9").
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#ReturnTimeOnly">
        <div>
            Enter the return time using the 24 hour format.  Both the hour and
            minute should have leading zeros for values less than 9 (for example, "09" instead of "9").
        </div>
    </li>

    <!-- Fourth row -->
    <li class="tlypageguide_left" data-tourtarget="#VesselName">
        <div>
            Enter the vessel name.  TUBS will filter the list based on what you enter.
            Select the correct vessel from the list and use the "Tab" key to move to the next
            field.  The gear type for the vessel is filled automatically.  If it isn't, or the
            type is incorrect, re-enter the vessel's name.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#GearCode">
        <div>
            Gear code should be filled automatically when vessel was selected.  If the gear code
            is not filled or is incorrect, check that the correct vessel was chosen in the
            previous field.
        </div>
    </li>
    
    
    
</ul>

@section AdditionalScripts {
    <script src="~/Scripts/spc.utilities.js"></script>

    @*http://keith-wood.name/uiDatepickerValidation.html*@
    @*Instead of patching jquery validator file, replace the function*@
    @*http://forums.asp.net/t/1744540.aspx/1*@
    @*
    $.validator.methods.date = function (value, element) {
    return this.optional(element) || ( /^\d{1,2}[\/-]\d{1,2}[\/-]\d{4}(\s\d{2}:\d{2}(:\d{2})?)?$/.test(value)
            && !/Invalid|NaN/.test(new Date(value.substr(6, 4) + '-' + value.substr(3, 2) + '-' + value.substr(0, 2))));
    }
    *@

    @*  JavaScript for Ajax lookups and date/time pickers *@
    <script>

        var vesselUpdater = function (label, data) {
            $("#VesselName").val(label);
            $("#VesselId").val(data.id);
            $("#GearCode").val(data.GearType);
        };

        var vta = new spc.typeAheadFactory('@Url.Action("Find", "Vessel")', vesselUpdater);

        var observerUpdater = function (label, data) {
            $("#ObserverFullName").val(label);
            $("#ObserverCode").val(data.id);
        };

        var ota = new spc.typeAheadFactory('@Url.Action("Find", "Observer")', observerUpdater);

        var departurePortUpdater = function (label, data) {
            $("#DeparturePortName").val(label);
            $("#DeparturePortCode").val(data.id);
        };

        var dpta = new spc.typeAheadFactory('@Url.Action("Find", "Port")', departurePortUpdater);

        var returnPortUpdater = function (label, data) {
            $("#ReturnPortName").val(label);
            $("#ReturnPortCode").val(data.id);
        };

        var rpta = new spc.typeAheadFactory('@Url.Action("Find", "Port")', returnPortUpdater);

        $(function () {
            $(document).on('keypress', 'enter', function () {
                // It would be cool to convert this to a tab keypress, but I'll be happy to
                // prevent unintended saves for now.
                return false;
            });


            $('.datepicker').datepicker();

            $('#VesselName').typeahead(vta);
            $('#ObserverFullName').typeahead(ota);
            $('#DeparturePortName').typeahead(dpta);
            $('#ReturnPortName').typeahead(rpta);

            /* TODO:  Only execute this if it works in the current browser (read:  Not IE8 or lower) */
            tl.pg.init();
        });
    </script>

}