@model TubsWeb.Models.TripHeaderViewModel

@{
    ViewBag.Title = "Register new trip";
}

@if (ViewData["flash"] != null)
{
    var alertLevel = ViewData["flash-level"] ?? "alert-error";
<div class="alert @alertLevel">
    <a class="close" data-dismiss="alert">&times;</a>
    @ViewData["flash"]
</div>
}

@using (Html.BeginForm("Create", "Trip", FormMethod.Post, new { id = "createTripForm", @class = "well", autocomplete = "off" }))
{
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>Register New Trip</legend>
        @Html.EditorFor(m => Model)
        <p>
            <input type="submit" name="Save" value="Save" class="btn btn-primary" />
            <input type="reset" name="Cancel" class="btn" />
        </p>
    </fieldset>  
}

<ul id="tlyPageGuide" data-tourtitle="Detailed data entry instructions">
    <li class="tlypageguide_left" data-tourtarget="#ObserverFullName">
        <div>
            Enter the observer's name.  TUBS will filter the list based on what you enter.
            Select the correct observer from the list and use the "Tab" key to move to the next
            field.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#DeparturePortName">
        <div>
            Enter the port name.  TUBS will filter the list based on what you enter.
            Select the correct port from the list and use the "Tab" key to move to the next
            field.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#DepartureDate">
        <div>
            Enter the departure date.  The format for date is dd-mm-yy HH:mm.
            This means that day of the month and month should have a leading zero
            if the value is less than 9 (for example, "09" instead of "9").
            Time of day uses the 24-hour clock.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#TripNumber">
        <div>
            Enter the numeric portion of the trip number.  For example, if the
            trip number is "DJB 11-01", enter "11-01".
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#ReturnPortName">
        <div>
            Enter the port name.  TUBS will filter the list based on what you enter.
            Select the correct port from the list and use the "Tab" key to move to the next
            field.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#ReturnDate">
        <div>
            Enter the departure date.  The format for date is dd-mm-yy HH:mm.
            This means that day of the month and month should have a leading zero
            if the value is less than 9 (for example, "09" instead of "9").
            Time of day uses the 24-hour clock.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#VesselName">
        <div>
            Enter the vessel name.  TUBS will filter the list based on what you enter.
            Select the correct vessel from the list and use the "Tab" key to move to the next
            field.  The gear type for the vessel is filled automatically.  If it isn't, or the
            type is incorrect, re-enter the vessel's name.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#GearCode">
        <div>
            Gear code should be filled automatically when vessel was selected.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#ProgramCode">
        <div>
            Enter the program code for the organization that arranged this observer trip.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#CountryCode">
        <div>
            Enter the ISO A2 code for the country for which the trip was undertaken.
        </div>
    </li>
    <li class="tlypageguide_left" data-tourtarget="#Version">
        <div>
            Select the workbook version.
        </div>
    </li>
</ul>

@section AdditionalScripts {
    <script src="@Url.Content("~/Scripts/spc.utilities.js")"></script>

    @*  JavaScript for Ajax lookups and date/time pickers *@
    <script>

        var vesselUpdater = function (label, data) {
            $("#VesselName").val(label);
            $("#VesselId").val(data.id);
            $("#GearCode").val(data.GearType);
        };

        var vta = new spc.typeAheadFactory('@Url.Action("Find", "Vessel")', vesselUpdater);

        var observerUpdater = function (label, data) {
            $("#ObserverFullName").val(label);
            $("#ObserverCode").val(data.id);
        };

        var ota = new spc.typeAheadFactory('@Url.Action("Find", "Observer")', observerUpdater);

        var departurePortUpdater = function (label, data) {
            $("#DeparturePortName").val(label);
            $("#DeparturePortCode").val(data.id);
        };

        var dpta = new spc.typeAheadFactory('@Url.Action("Find", "Port")', departurePortUpdater);

        var returnPortUpdater = function (label, data) {
            $("#ReturnPortName").val(label);
            $("#ReturnPortCode").val(data.id);
        };

        var rpta = new spc.typeAheadFactory('@Url.Action("Find", "Port")', returnPortUpdater);

        $(function () {
            // Observer workbooks don't fly into our hands, so starting 6 months back is probably a good bet.
            // Make entry a bit quicker:  Switch dateFormat from 'dd/mm/yy' to 'dd-mm-y'
            // with an alternate format for the backend
            var sixMonthsAgo = new Date();
            sixMonthsAgo.setDate(sixMonthsAgo.getDate() - 180);
            $(".datetime").datetimepicker({
                showOn: "button",
                buttonImage: '@Url.Content("~/Content/images/calendar-icon.png")',
                buttonImageOnly: true,
                dateFormat: 'dd-mm-y',
                altFormat: 'yy-mm-dd', // This is what gets sent on the back end
                timeFormat: 'hh:mm',
                numberOfMonths: 2,
                defaultDate: sixMonthsAgo
            });

            $('#VesselName').typeahead(vta);
            $('#ObserverFullName').typeahead(ota);
            $('#DeparturePortName').typeahead(dpta);
            $('#ReturnPortName').typeahead(rpta);

            /* TODO:  Only execute this if it works in the current browser (read:  Not IE8 or lower) */
            tl.pg.init();
        });
    </script>

}