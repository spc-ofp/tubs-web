@model TubsWeb.ViewModels.LongLineSampleViewModel

@{
    string titleSuffix = String.Format("LL-4 Set {0} of {1}", Model.SetNumber, Model.SetCount);
    ViewBag.Title = String.Format("{0}: {1}", Model.TripNumber, titleSuffix);
}

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = Model.TripId }), Model.TripNumber as string),
        Tuple.Create(Url.RouteUrl(TubsWeb.RouteConfig.LongLineSampleList, new { tripId = Model.TripId }), "Catch Monitoring"),
        Tuple.Create("#", titleSuffix)
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<ul class="pager">
@if (Model.HasPrevious)
{
    <li>
        <a href='@Url.RouteUrl(TubsWeb.RouteConfig.LongLineSets, new { tripId = Model.TripId, setNumber = (Model.SetNumber - 1), action = "Index" })'>Previous Set</a>
    </li>
}
    
@if (Model.HasNext)
{
    <li>
        <a href='@Url.RouteUrl(TubsWeb.RouteConfig.LongLineSets, new { tripId = Model.TripId, setNumber = (Model.SetNumber + 1), action = "Index" })'>Next Set</a>
    </li>
}
</ul>

<div class="row">
    <div class="span4">
        <label><strong>Measuring Instrument</strong></label>
        @Model.MeasuringInstrument
    </div>
    <div class="span4">
        <label><strong>Start of Set</strong></label>
        @Html.DisplayFor(m => m.SetDate, new { format = "dd/MM/yy HHmm" })
    </div>
    <div class="span4">
        <label><strong>Start of Haul</strong></label>
        @Html.DisplayFor(m => m.HaulDate, new { format = "dd/MM/yy" })
    </div>
</div>

<hr />

<table class="table table-bordered table-condensed table-striped">
    <caption>@Model.Details.Count samples</caption>
    <thead>
        <tr>
            <th colspan="4">&nbsp;</th>
            <th colspan="2">Condition</th>
            <th colspan="2">Length</th>
            <th colspan="2">Weight</th>
            <th colspan="3">&nbsp;</th>
        </tr>
        <tr>
            <th>Sample #</th>
            <th>Time</th>
            <th>Hook #</th>
            <th>Species</th>
            <th>Caught</th>
            <th>Discard</th>
            <th>(cm)</th>
            <th>Code</th>
            <th>(kg)</th>
            <th>Code</th>
            <th>Fate</th>
            <th>Sex</th>
            <th>Comments</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var detail in Model.Details)
    {
        <tr>
            <td>@detail.SampleNumber</td>
            <td>@detail.TimeOnly</td>
            <td>@Html.DisplayFor(m => detail.HookNumber)</td>
            <td>@detail.SpeciesCode</td>
            <td>@detail.CaughtCondition</td>
            <td>@detail.DiscardedCondition</td>
            <td>@Html.DisplayFor(m => detail.Length)</td>
            <td>@detail.LengthCode</td>
            <td>@Html.DisplayFor(m => detail.Weight)</td>
            <td>@detail.WeightCode</td>
            <td>@detail.FateCode</td>
            <td>@detail.SexCode</td>
            <td>@detail.Comments</td>
        </tr>
    }
    </tbody>
</table>