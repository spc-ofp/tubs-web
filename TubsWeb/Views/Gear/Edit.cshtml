@model Spc.Ofp.Tubs.DAL.Entities.Gear
@using Spc.Ofp.Tubs.DAL.Entities;

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), Model.Trip.SpcTripNumber ?? "This Trip"),
        Tuple.Create(Url.Action("Index", "Gear", new { tripId = ViewBag.TripId }), "Fishing Gear"),
        Tuple.Create("#", "Edit Fishing Gear")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@if (ViewData["flash"] != null)
{
    var alertLevel = ViewData["flash-level"] ?? "alert-error";
<div class="alert @alertLevel">
    <a class="close" data-dismiss="alert">&times;</a>
    @ViewData["flash"]
</div>
}

@using (Html.BeginForm("Edit", "Gear", FormMethod.Post, new { @class = "well" }))
{ 
    @Html.ValidationSummary(true)
    if (ViewBag.GearType == typeof(PurseSeineGear))
    {
        var gear = Model as PurseSeineGear;
        @Html.EditorFor(m => gear)
    }

    @*  TODO Add other gear types as new trip types come online *@
    
    <div class="btn-group">
        <input type="submit" name="Save" value="Save" class="btn-primary" />
        <input type="reset" name="Cancel" />
    </div>
}


    
<p>
    @Html.ActionLink("Back to Gear", "Index", "Gear", new { tripId = ViewBag.TripId }, null) | 
    <a href='@Url.RouteUrl("TripDetails", new { tripId = ViewBag.TripId })'>Back to Trip</a>
</p>
