@model TubsWeb.ViewModels.Gen3ViewModel
@using Newtonsoft.Json

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = Model.TripId }), Model.TripNumber as string),
        Tuple.Create(Url.Action("Index", "Gen3", new { tripId = Model.TripId }), "GEN-3"),
        Tuple.Create("#", "Edit GEN-3")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<form id="gen3Form">
    <p>
        <button id="saveButton" type="submit" class="btn btn-primary" data-bind="activity: $root.saveCommand.isExecuting, command: $root.saveCommand">Save</button>
        <button id="reloadButton" type="button" class="btn btn-warning" data-bind="activity: $root.reloadCommand.isExecuting, command: $root.reloadCommand">
            <i class="icon-refresh icon-white"></i>&nbsp;Reload
        </button>
        <span data-bind="visible: $root.isDirty" class="text-warning">You have unsaved changes.</span>
    </p>
    @if (2007 == Model.VersionNumber)
    {
        Html.RenderPartial("_Edit_v07");
    }
    else if (2009 == Model.VersionNumber)
    {
        Html.RenderPartial("_Edit_v09");
    }
    else
    {
        @: GEN-3 questions not available for this trip
    }
    <hr />
    @* TODO: .length isn't zero after all existing items have been destroyed but _before_ a save *@
    <button id="btnAddWhenEmpty" type="button" class="btn btn-info" data-bind="visible: $root.Notes().length == 0">Add Note</button>
    <table class="table table-bordered table-condensed table-striped">
        <thead>
            <tr>
                <th></th>
                <th>Date</th>
                <th>Comments</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="gen3Notes" data-bind="foreach: $root.Notes">
            <tr data-bind="css: { warning: (isDirty() || Id() == 0) }">
                <td>
                    @* Delete button is taken out of the tab order to prevent accidents *@
                    <button type="button"
                            tabindex="3000"
                            class="removeItem btn btn-mini btn-danger" 
                            rel="tooltip" 
                            title="Click to remove row"><i class="icon-remove icon-white"></i></button>
                </td>
                <td>
                    <div class="input-append">
                        <input type="text"
                               data-bind="hasfocus: NeedsFocus, uniqueName: true, value: Date.formattedDate"
                               placeholder="dd/mm/yy"
                               class="input-mini" />
                        <span class="add-on"><i class="icon-calendar"></i></span>
                    </div>
                </td>
                <td><textarea class="field span9" rows="6" data-bind="value: Comments"></textarea></td>
                <td>
                    <button class="addItem btn btn-mini btn-info" 
                            type="button"
                            rel="tooltip" 
                            title="Click to add row">
                        <i class="icon-plus icon-white"></i>
                    </button>
                </td>
            </tr>
        </tbody>
    </table>
</form>

<!-- TODO Add a debug param so that this can be displayed for troubleshooting -->
@*
<pre data-bind="text: ko.toJSON($root, null, 2)"></pre>
*@


@section AdditionalScripts {
    @{ var modelAsJson = Html.Raw(JsonConvert.SerializeObject(Model)); }
    <!-- ISODate extension -->
    <script src="~/Scripts/knockout.custom-bindings.js"></script>
    <!-- Ajax data layer -->
    <script src="~/Scripts/App/errorlogger.js"></script>
    <script src="~/Scripts/App/datacontext.js"></script>
    <script src="~/Scripts/App/vm.gen3.js"></script>
    <script>
        $(document).ready(function () {
            var viewModel = new tubs.gen3(@modelAsJson);
            viewModel.clearDirtyFlag();
            ko.applyBindings(viewModel);

            $(".gen3Notes").on("click", ".removeItem", function() {
                viewModel.removeNote(ko.dataFor(this));
            });

            $(".gen3Notes").on("click", ".addItem", function() {
                viewModel.addNote();
            });

            $("#btnAddWhenEmpty").on("click", function () {
                viewModel.addNote();
            });

            // PageGuide initialization
            tl.pg.init();

            /* TODO: Extract this into a common script for the whole application */
            window.onbeforeunload = function(e) {
                if (viewModel.isDirty())
                {
                    if (!e) e = window.event;
                    // IE only?
                    e.cancelBubble = true;
                    e.returnValue = "Leaving the page will discard unsaved changes.";
                    // Firefox?
                    if (e.stopPropagation)
                    {
                        e.stopPropagation();
                        e.preventDefault();
                    }

                    return "Leaving the page will discard unsaved changes.";
                }
            };            
        });
    </script>
}
