@model Spc.Ofp.Tubs.DAL.Entities.TripMonitorDetail

@* This is kind of hackish, but it works well enough (for now) *@
@*
   For more details on how this hack was arrived at, see the following links:
   http://blog.stevensanderson.com/2010/01/28/editing-a-variable-length-list-aspnet-mvc-2-style/
   http://stackoverflow.com/questions/6852559/mvc3-modelbinding-to-a-collection-posted-back-with-index-gaps
   http://zahidadeel.blogspot.com/2011/05/master-detail-form-in-aspnet-mvc-3-ii.html

*@

@{
    var dateFieldId = System.Guid.NewGuid().ToString();
    var currentIndex = System.Guid.NewGuid().ToString();
    var idFieldName = String.Format("details[{0}].Id", currentIndex);
    var dateFieldName = String.Format("details[{0}].DetailDate", currentIndex);
    var commentFieldName = String.Format("details[{0}].Comments", currentIndex);
}

<div class="editorRow">
    <input type="hidden" name="details.index" value="@currentIndex" />
    <input type="hidden" name="@idFieldName" value="@Model.Id" />
    @Html.LabelFor(m => Model.DetailDate)
    <input class="date" id="@dateFieldId" name="@dateFieldName" type="text" value="@Model.DetailDate" />
    &nbsp;&nbsp;
    @Html.LabelFor(m => Model.Comments)
    <textarea class="span6" style="height: 100px;" name="@commentFieldName">@Model.Comments</textarea>
    @*
    <input style="width: 350px;" name="@commentFieldName" type="text" value="@Model.Comments" />
    *@
</div>

@{ Html.RenderPartial("_DatePickerInit"); }