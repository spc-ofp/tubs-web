@model TubsWeb.ViewModels.PageCountViewModel
@using Newtonsoft.Json

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = Model.TripId }), Model.TripNumber ?? "This Trip"),
        Tuple.Create(Url.Action("Index", "PageCount", new { tripId = Model.TripId}), "Page Counts"),
        Tuple.Create("#", "Edit Page Counts")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<form id="pageCountForm" class="form-horizontal">
    <p>
        <button id="saveButton" type="submit" class="btn btn-primary" data-bind="activity: $root.saveCommand.isExecuting, command: $root.saveCommand">Save</button>
        <button id="reloadButton" type="button" class="btn btn-warning" data-bind="activity: $root.reloadCommand.isExecuting, command: $root.reloadCommand">
            <i class="icon-refresh icon-white"></i>&nbsp;Reload
        </button>
        <span data-bind="visible: $root.isDirty" class="text-warning">You have unsaved changes.</span>
    </p>

    <button id="btnAddWhenEmpty" type="button" class="btn btn-info" data-bind="visible: $root.PageCounts().length == 0">Add Page Count</button>
    <ul class="unstyled page-count-entries" data-bind="foreach: $root.PageCounts">
        <li>
            <div class="row-fluid">
                <div class="span1">
                    <button type="button"
                        tabindex="3000"
                        class="removeItem btn btn-mini btn-danger" 
                        rel="tooltip" 
                        title="Click to remove row"><i class="icon-remove icon-white"></i></button>
                </div>
                <div class="span3">
                <div class="control-group">
                    <select class="input-small" data-bind="options: $root.FormKeys, value: $data.Key"></select>
                    <input type="number" data-bind="value: $data.Value" class="input-mini" />
                    </div>
                </div>
                <div class="span1">
                <button class="addItem btn btn-mini btn-info" 
                        type="button"
                        rel="tooltip" 
                        title="Click to add row">
                    <i class="icon-plus icon-white"></i>
                </button>
                </div>
            </div>
        </li>
    </ul>
</form>

@*
<pre data-bind="text: ko.toJSON($root, null, 2)"></pre>
*@



@section AdditionalScripts {
    <!-- Ajax data layer -->
    <script src="~/Scripts/App/errorlogger.js"></script>
    <script src="~/Scripts/App/datacontext.js"></script>
    <script src="~/Scripts/App/vm.pagecounts.js"></script>

    @{ var modelAsJson = Html.Raw(JsonConvert.SerializeObject(Model)); }

    <script>
        $(document).ready(function () {
            var viewModel = new tubs.PageCountViewModel(@modelAsJson);
            viewModel.clearDirtyFlag();
            ko.applyBindings(viewModel);

            $(".page-count-entries").on("click", ".removeItem", function() {
                viewModel.removePageCount(ko.dataFor(this));
            });
            $(".page-count-entries").on("click", ".addItem", function() {
                viewModel.addPageCount();
            });

            $("#btnAddWhenEmpty").on("click", function () {
                viewModel.addPageCount();
            });

            // PageGuide initialization
            tl.pg.init();

            /* TODO: Extract this into a common script for the whole application */
            window.onbeforeunload = function(e) {
                if (viewModel.isDirty())
                {
                    if (!e) e = window.event;
                    // IE only?
                    e.cancelBubble = true;
                    e.returnValue = "Leaving the page will discard unsaved changes.";
                    // Firefox?
                    if (e.stopPropagation)
                    {
                        e.stopPropagation();
                        e.preventDefault();
                    }

                    return "Leaving the page will discard unsaved changes.";
                }
            };  
        });
    </script>
    
}
