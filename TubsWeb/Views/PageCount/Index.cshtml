@model TubsWeb.ViewModels.PageCountViewModel

@{
    ViewBag.Title = "Page counts for " + Model.TripNumber;
}

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), Model.TripNumber ?? "This Trip"),
        Tuple.Create("#", "Page Counts")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@if (!ViewBag.IsReadOnly)
{
    <p>@Html.ActionLink("Edit Page Counts", "Edit", null, new { @class = "btn btn-primary" })</p>    
}

<table class="table table-bordered table-condensed table-striped">
    <thead>
        <tr>
            <th>Form</th>
            <th>Count</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var pc in Model.PageCounts)
    {
        if (!pc.Value.HasValue) { continue; }
        <tr>
            <td>@pc.Key</td>
            <td>@Html.DisplayFor(m => pc.Value)</td>
        </tr>
    }
    </tbody>
</table>
