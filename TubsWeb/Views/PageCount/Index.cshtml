@model Spc.Ofp.Tubs.DAL.Entities.Trip
@using Spc.Ofp.Tubs.DAL.Entities
@using Spc.Ofp.Tubs.DAL.Common

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), Model.SpcTripNumber ?? "This Trip"),
        Tuple.Create("#", "Page Counts")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@* TODO Should we enable edits directly in the table too? *@
@{ Html.RenderPartial("_PageCounts", Model.PageCounts); }

@if (!Model.IsReadOnly)
{
    @* Passing the argument to 'done' requires the String.Format call *@
    @* http://stackoverflow.com/questions/6550290/ajaxoptions-onsuccess-callback-with-parameter-not-working *@
    var options = new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "pageCounts", OnSuccess = String.Format("clearForm('#{0}')", "addPageCountForm") };
    // Drop down list of form types should be valid for trip type
    var formNames =
        from FormNames fm in Enum.GetValues(typeof(FormNames))
        select new { ID = fm, Name = fm.GetDescription() };
    var formNameList = new SelectList(formNames, "ID", "Name");
    
    using (Ajax.BeginForm("AddPageCount", null, options, new { id = "addPageCountForm" }))
    {
        @Html.ValidationSummary(false)
        <fieldset>
            <legend>Add Page Count</legend>
            @{ var pageCount = new PageCount(); }
            @Html.HiddenFor(m => pageCount.Id)

            @Html.LabelFor(m => pageCount.FormName)
            @Html.DropDownListFor(m => pageCount.FormName, formNameList)
            @Html.ValidationMessageFor(m => pageCount.FormName) <br />

            @Html.LabelFor(m => pageCount.FormCount)
            @Html.TextBoxFor(m => pageCount.FormCount)
            @Html.ValidationMessageFor(m => pageCount.FormCount) <br />
            <div class="btn-group">
                <input type="submit" name="Add" value="Add" class="btn-primary" />
                <input type="reset" name="Cancel" />
            </div>
        </fieldset>
    }
}