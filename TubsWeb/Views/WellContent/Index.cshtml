@model TubsWeb.ViewModels.WellContentViewModel

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = Model.TripId }), Model.TripNumber ?? "This Trip"),
        Tuple.Create("#", "Well Content")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<table class="table table-bordered table-condensed table-striped">
    <thead>
        <tr>
            <th>Well Number</th>
            <th>Location</th>
            <th>Capacity (mT)</th>
            <th>Contents</th>
            <th>Comments</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var wellContent in Model.WellContentItems)
    {
        <tr>
            <td>@wellContent.WellNumber</td>
            <td>@wellContent.Location</td>
            <td>@Html.DisplayFor(m=>wellContent.Capacity)</td>
            <td>@wellContent.Content</td>
            <td><div class="large-text">@wellContent.Comment</div></td>
        </tr>
    }
    </tbody>
</table>



@if (!ViewBag.IsReadOnly)
{
    <a href='@Url.RouteUrl(TubsWeb.RouteConfig.WellContents, new { tripId = Model.TripId, action = "Edit" })' class="btn btn-primary">Edit Well Content</a>
}