@model Spc.Ofp.Tubs.DAL.Entities.PurseSeineSet

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), ViewBag.TripNumber as string),
        Tuple.Create(Url.Action("List", "FishingSet", new { tripId = ViewBag.TripId }), "Sets"),
        Tuple.Create("#", String.Format("Set {0} of {1}", ViewBag.CurrentSet, ViewBag.MaxSets))
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@if (null == Model)
{
    <text>No such set number</text>
}
else
{
    <ul class="pager">
    @if (ViewBag.CurrentSet > 1)
    {
        <li>
            <a href='@Url.RouteUrl("SetDetails", new { tripId = ViewBag.TripId, setNumber = ViewBag.CurrentSet - 1 })'>Previous Set</a>
        </li>
    }
    
    @if (ViewBag.MaxSets > ViewBag.CurrentSet)
    {
        <li>
            <a href='@Url.RouteUrl("SetDetails", new { tripId = ViewBag.TripId, setNumber = ViewBag.CurrentSet + 1 })'>Next Set</a>
        </li>
    }
    </ul>   
      
    <table class="table table-bordered table-condensed table-striped">
        <caption>Set Sequence Times</caption>
        <thead>
            <tr>
                <th>Skiff Off</th>
                <th>Winch On</th>
                <th>Rings Up</th>
                <th>Begin Brailing</th>
                <th>End Brailing</th>
                <th>End of Set</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DisplayFor(m => Model.SkiffOff)</td>
                <td>@Html.DisplayFor(m => Model.WinchOn, new { format = "t" })</td>
                <td>@Html.DisplayFor(m => Model.RingsUp, new { format = "t" })</td>
                <td>@Html.DisplayFor(m => Model.BeginBrailing, new { format = "t" })</td>
                <td>@Html.DisplayFor(m => Model.EndBrailing, new { format = "t" })</td>
                <td>@Html.DisplayFor(m => Model.EndOfSet, new { format = "t" })</td>
            </tr>
        </tbody>
    </table>
    
    <table class="table table-bordered table-condensed table-striped">
        <caption>Cumulative Catch Onboard (mT)</caption>
        <thead>
            <tr>
                <th>Source</th>
                <th>Onboard Total</th>
                <th>Retained This Set</th>
                <th>New Onboard Total</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Observer</td>
                <td>@Html.DisplayFor(m => Model.WeightOnboardObserved)</td>
                <td>
                    @Html.DisplayFor(m => Model.RetainedTonnageObserved)
                    @* // Need a better means of display Only from this set? @Html.DisplayFor(m => Model.VesselTonnageOnlyFromThisSet)*@
                </td>
                <td>@Html.DisplayFor(m => Model.NewOnboardTotalObserved)</td>
            </tr>
            <tr>
                <td>Vessel Log</td>
                <td>@Html.DisplayFor(m => Model.WeightOnboardFromLog)</td>
                <td>@Html.DisplayFor(m => Model.RetainedTonnageFromLog)</td>
                <td>@Html.DisplayFor(m => Model.NewOnboardTotalFromLog)</td>
            </tr>
        </tbody>
    </table>
    
    <div class="row">
        <div class="span3">@Html.LabelFor(m => Model.SumOfBrail1)</div>
        <div class="span2">@Html.DisplayFor(m => Model.SumOfBrail1)</div>
    </div>
    <div class="row">
        <div class="span3">@Html.LabelFor(m => Model.SumOfBrail2)</div>
        <div class="span2">@Html.DisplayFor(m => Model.SumOfBrail2)</div>
    </div>
    <div class="row">
        <div class="span3">@Html.LabelFor(m => Model.TonsOfTunaObserved)</div>
        <div class="span2">@Html.DisplayFor(m => Model.TonsOfTunaObserved)</div>
    </div>
   
    <table class="table table-bordered table-condensed table-striped">
        <caption>Target Species Totals</caption>
        <thead>
            <tr>
                <th>&nbsp;</th>
                <th>SKJ</th>
                <th>YFT</th>
                <th>BET</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>In Set</td>
                <td>@Html.DisplayFor(m => Model.ContainsSkipjack)</td>
                <td>@Html.DisplayFor(m => Model.ContainsYellowfin)</td>
                <td>@Html.DisplayFor(m => Model.ContainsBigeye)</td>
            </tr>
            <tr>
                <td>Approximate %</td>
                <td>@Html.DisplayFor(m => Model.SkipjackPercentage)</td>
                <td>@Html.DisplayFor(m => Model.YellowfinPercentage)</td>
                <td>@Html.DisplayFor(m => Model.BigeyePercentage)</td>
            </tr>
            <tr>
                <td>Observed Weight</td>
                <td>@Html.DisplayFor(m => Model.TonsOfSkipjackObserved)</td>
                <td>@Html.DisplayFor(m => Model.TonsOfYellowfinObserved)</td>
                <td>@Html.DisplayFor(m => Model.TonsOfBigeyeObserved)</td>
            </tr>
        </tbody>
    </table>
    
    <table class="table table-bordered table-condensed table-striped">
        <caption>Catch Details</caption>
        <thead>
            <tr>
                <th>Species</th>
                <th>Fate</th>
                <th>Observed Weight (mT)</th>
                <th>Observed Count</th>
                <th>Log Weight (mT)</th>
                <th>Log Count</th>
                <th>Comments</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var sc in Model.CatchList)
        {
            <tr>
                <td>@Html.DisplayFor(s => sc.SpeciesCode)</td>
                <td>@Html.DisplayFor(s => sc.FateCode)</td>
                <td>@Html.DisplayFor(s => sc.MetricTonsObserved)</td>
                <td>@Html.DisplayFor(s => sc.CountObserved)</td>
                <td>@Html.DisplayFor(s => sc.MetricTonsFromLog)</td>
                <td>@Html.DisplayFor(s => sc.CountFromLog)</td>
                <td>@Html.DisplayFor(s => sc.Comments)</td>
            </tr>
        }
        </tbody>
    </table>
    
    <hr />
    <div class="row">
        <div class="span3">Comments</div>
    </div>
    <div class="row">
        <div class="span12">@Html.DisplayFor(m => Model.Comments)</div>
    </div>
}
