@model IEnumerable<Spc.Ofp.Tubs.DAL.Entities.PurseSeineSet>
@using Spc.Ofp.Tubs.DAL.Common           

@helper IsSkunk(IList<Spc.Ofp.Tubs.DAL.Entities.PurseSeineSetCatch> setcatch) {
    if (0 == setcatch.Count) {
        <text>Y</text>   
    } else {
        <text>N</text>
    }
}

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), ViewBag.TripNumber as string),
        Tuple.Create("#", "Sets")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

@{
    // Might as well display total trip catch here.
    decimal? totalCatch = 0;
}

<table class="table table-bordered table-condensed table-striped">
    <thead>
        <tr>
            <th>&nbsp;</th>
            <th>Set #</th>
            <th>Association</th>
            <th>Skunk Set</th>
            <th>Total Catch (Observed)</th>
            <th>Comments</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var set in @Model)
    {
        var detailTarget = Url.RouteUrl(TubsWeb.RouteConfig.Sets, new { tripId = ViewBag.TripId, setNumber = set.SetNumber, action = "Index" });
        var editTarget = Url.RouteUrl(TubsWeb.RouteConfig.Sets, new { tripId = ViewBag.TripId, setNumber = set.SetNumber, action = "Edit" });
        var currentCatch = set.CatchList.Sum(sc => sc.MetricTonsObserved);
        totalCatch += currentCatch;
        <tr>
            <td class="nobr">
                <a href="@detailTarget"><i class="icon-list-alt icon-large" title="Details" rel="tooltip"></i></a>
                @if(!ViewBag.IsReadOnly)
                {
                    <text> | </text><a href="@editTarget"><i class="icon-edit icon-large" title="Edit" rel="tooltip"></i></a> 
                }
            </td>
            <td>@set.SetNumber</td>
            <td>@set.Activity.SchoolAssociation.GetDescription()</td>
            <td>@IsSkunk(set.CatchList)</td>
            <td>@Html.DisplayFor(i => currentCatch)</td>
            <td><div class="large-text">@set.Comments</div></td>
        </tr>
    }
    </tbody>
    <tfoot>
        <tr>
            <th colspan="4">Total Catch</th>
            <th>@Html.DisplayFor(i => totalCatch) mT</th>
            <th>&nbsp;</th>
        </tr>
    </tfoot>
</table>

