@model IEnumerable<Spc.Ofp.Tubs.DAL.Entities.PurseSeineSet>
@using Spc.Ofp.Tubs.DAL.Common           

@helper IsSkunk(IList<Spc.Ofp.Tubs.DAL.Entities.PurseSeineSetCatch> setcatch) {
    if (0 == setcatch.Count) {
        <text>Y</text>   
    } else {
        <text>N</text>
    }
}

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.Action("Index", "Trip"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), ViewBag.TripNumber as string),
        Tuple.Create("#", "Sets")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<table class="table table-bordered table-condensed table-striped">
    <thead>
        <tr>
            <th>Set #</th>
            <th>Association</th>
            <th>Skunk Set</th>
            <th>Total Catch (Observed)</th>
            <th>Comments</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var set in @Model)
    {
        <tr>
            <td>
                <a href='@Url.RouteUrl("SetDetails", new { tripId = ViewBag.TripId, setNumber = set.SetNumber })'>@set.SetNumber</a>
            </td>
            <td>@set.Activity.SchoolAssociation.GetDescription()</td>
            <td>@IsSkunk(set.CatchList)</td>
            <td>@set.CatchList.Sum(sc => sc.MetricTonsObserved)</td>
            <td><div class="large-text">@set.Comments</div></td>
        </tr>
    }
    </tbody>
</table>

