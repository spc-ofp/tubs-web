@model Spc.Ofp.Tubs.DAL.Entities.Trip
@using Spc.Ofp.Tubs.DAL.Entities

@* For now, create this in the View. *@
@{
    IEnumerable<Tuple<string, string>> crumbs = new List<Tuple<string, string>>()
    {
        Tuple.Create(Url.RouteUrl("TripList"), "Trips"),
        Tuple.Create(Url.Action("Details", "Trip", new { tripId = ViewBag.TripId }), Model.SpcTripNumber ?? "This Trip"),
        Tuple.Create("#", "GEN-1 Events")
    };
}

@{ Html.RenderPartial("_BreadCrumbs", crumbs); }

<div class="tabbable">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#1" data-toggle="tab">Sightings</a></li>
        <li><a href="#2" data-toggle="tab">Transfers</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="1">
        @if(!ViewBag.IsReadOnly)
        {
            var editSightingsLink = Url.Action("EditSightings");
            <p><a href="@editSightingsLink" class="btn btn-primary"><i class="icon-edit icon-white"></i>&nbsp;Edit Sightings</a></p>
        }
        @* TODO: _Sightings uses WebGrid which isn't where we really want to be *@
        @{ Html.RenderPartial("_Sightings", Model.Sightings); }
        </div>
        <div class="tab-pane" id="2">
        @if(!ViewBag.IsReadOnly)
        {
            var editTransfersLink = Url.Action("EditTransfers");
            <p><a href="@editTransfersLink" class="btn btn-primary"><i class="icon-edit icon-white"></i>&nbsp;Edit Transfers</a></p>
        }
        @* TODO: _Transfers uses WebGrid which isn't where we really want to be *@ 
        @{ Html.RenderPartial("_Transfers", Model.Transfers); }
        </div>
    </div>
</div>