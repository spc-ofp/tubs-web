@helper DisplayDate(DateTime? date) {
    if (date.HasValue) {
        @String.Format("{0}", date.Value);
    }
    else {
        <text>N/A</text>   
    }
}

@helper SpeedAndDirection(int? speed, int? direction) {
    if (!speed.HasValue && !direction.HasValue) {
        <text>N/A</text> 
    } else {
        var sb = new System.Text.StringBuilder();
        sb.Append(speed.HasValue ? speed.Value.ToString() : "UNK");
        sb.Append(" kts @ ");
        sb.Append(direction.HasValue ? direction.Value.ToString() : "UNK");
        sb.Append("&deg;");        
        @Html.Raw(sb.ToString()) 
    }
}

@helper FormatLatitude(double? latitude) {
    if (latitude.HasValue && Math.Abs(latitude.Value) <= 90) {
        string hemisphere = latitude.Value < 0 ? "S" : "N";
        int degrees = Math.Abs(latitude.Value > 0 ? (int)Math.Floor(latitude.Value) : (int)Math.Ceiling(latitude.Value));
        //int degrees = Math.Abs((int)latitude.Value);
        double decimalMinutes = Math.Abs(latitude.Value % 1);
        double minutes = decimalMinutes * 60.0;
        string output = String.Format("{0:D2} {1:00.000}{2}", degrees, minutes, hemisphere);
        @: @output     
    } else {
        @: N/A   
    }
}

@helper FormatLongitude(double? longitude) {
    if (longitude.HasValue && Math.Abs(longitude.Value) <= 180)
    {
        string hemisphere = longitude.Value < 0 ? "W" : "E";
        int degrees = Math.Abs((int)longitude.Value);
        double decimalMinutes = Math.Abs(longitude.Value % 1);
        double minutes = decimalMinutes * 60;
        string output = String.Format("{0:D3} {1:00.000}{2}", degrees, minutes, hemisphere);
        @: @output     
    }
    else
    {
        @: N/A   
    }    
}