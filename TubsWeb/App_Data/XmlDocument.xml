<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TubsWeb</name>
    </assembly>
    <members>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,TubsWeb.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action. 
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,TubsWeb.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,TubsWeb.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,TubsWeb.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:TubsWeb.Areas.HelpPage.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},TubsWeb.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:TubsWeb.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(TubsWeb.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:TubsWeb.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,TubsWeb.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:TubsWeb.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:TubsWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TubsWeb.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:TubsWeb.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:TubsWeb.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TubsWeb.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:TubsWeb.Controllers.SuperController">
            <summary>
            SuperController adds logging and user error reporting capabilities to the Controller.
            </summary>
        </member>
        <member name="M:TubsWeb.Controllers.SuperController.GettableJsonNetData(System.Object)">
            <summary>
            After much hair-pulling, this seems like the best way to manage replacing the
            crappy JSON serializer in MVC with the Newtonsoft version.
            NOTE:  MVC4 uses the Newtonsoft library, but only on the WebApi side of the
            house.  If you're still here in MVC, you're SOL
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.SuperController.Flash(System.String,System.String)">
            <summary>
            Flash stores an alert message and level into ViewData.
            Note that ViewData doesn't persist across a redirect, so anything stored thus
            will be lost if the user is pushed to another page via RedirectToAction(...)
            </summary>
            <param name="message">Alert message</param>
            <param name="level">Alert level</param>
        </member>
        <member name="M:TubsWeb.Controllers.SuperController.AddMinMaxDates(Spc.Ofp.Tubs.DAL.Entities.Trip)">
            <summary>
            Push JavaScript-compatible string values of departure and return dates into
            ViewBag for use in wiring up the date/time picker.
            </summary>
            <param name="trip"></param>
        </member>
        <member name="M:TubsWeb.Controllers.SuperController.IsAdd">
            <summary>
            Check to see if this is the "Add" action
            </summary>
            <returns>true if this is the "Add" action, false otherwise</returns>
        </member>
        <member name="M:TubsWeb.Controllers.SuperController.IsEdit">
            <summary>
            Check to see if this is the "Edit" action
            </summary>
            <returns>true if this is the "Edit" action, false otherwise</returns>
        </member>
        <member name="M:TubsWeb.Controllers.SuperController.IsIndex">
            <summary>
            Check to see if this is the "Index" action
            </summary>
            <returns>true if this is the "Index" action, false otherwise</returns>
        </member>
        <member name="M:TubsWeb.Controllers.Api.TripApiController.GetTrip(System.Int32)">
            <summary>
            Get the trip with the specified obstrip_id
            </summary>
            <param name="id"></param>
            <example>/api/trip/5</example>
            <returns>A single </returns>
        </member>
        <member name="T:TubsWeb.Controllers.Gen2Controller">
            <summary>
            Controller for GEN-2 data.
            </summary>
        </member>
        <member name="M:TubsWeb.Controllers.Gen2Controller.SortedInteractions(Spc.Ofp.Tubs.DAL.Entities.Trip)">
            <summary>
            SortedInteractions ensures that all the methods in this controller use the same
            sort algorithm so that page numbers are consistent throughout the app.
            </summary>
            <param name="tripId">Trip with interactions</param>
            <returns>IEnumerable of Interaction entities sorted by date and then species code</returns>
        </member>
        <member name="T:TubsWeb.Controllers.LengthSampleController.LengthSampleLineItem">
            <summary>
            LengthSampleLineItem represents a single row of length-frequency data
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.SetHaulController">
            <summary>
            SetHaulController manages LL-2/3 data.
            As it's for LL-2/3, it only works for Long Line trips
            </summary>
        </member>
        <member name="M:TubsWeb.Controllers.SetHaulController.NeedsRedirect(System.Int32,System.Int32,System.Int32)">
            <summary>
            NeedsRedirect validates the setNumber param for a trip based on the
            action and the number of sets already existing for this trip.
            
            The logic is as follows:
            - Index:  Don't care -- Index will cap dayNumber @ maxDays
            - Add:  If dayNumber is a day that already exists, push to Edit.
                    If dayNumber isn't the appropriate value based on maxDays,
                    redirect to Add with the appropriate value
            - Edit: If dayNumber is past the end of the trip, redirect to edit
                    with the final dayNumber
            </summary>
            <param name="tripId">obstrip_id</param>
            <param name="setNumber">Index (one based) of set number for this trip</param>
            <param name="maxSets">Number of sets already added to this trip</param>
            <returns></returns>
        </member>
        <member name="T:TubsWeb.Controllers.TripInfoController">
            <summary>
            TripInfoController is for working with LL-1 form information.
            On the purse seine side, this is called Ps1Controller.
            "Ll1Controller" is a name too poor to consider.
            This may be further renamed to LongLineTripInfoController
            (with Ps1Controller renamed to PurseSeineTripInfoController)
            but that is work for another day.
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.ValidationController">
            <summary>
            ValidationController holds methods used for unobtrusive remote validation.
            The attributes of interest for this are:
            
            data-val-remote-url
            data-val-remote-type
            data-val-remote-additionalfield
            
            In addition, client needs to include jquery.validate.js and jquery.validate.unobtrusive.js
            
            See this site:
            http://xhalent.wordpress.com/2011/01/21/arbitrary-client-side-validation-in-asp-net-mvc-3/
            
            TODO:  Evaluate FluentValidation:
            https://github.com/JeremySkinner/FluentValidation
            http://fluentvalidation.codeplex.com/documentation
            </summary>
        </member>
        <member name="T:TubsWeb.Core.AbstractBindAttribute">
            <summary>
            MVC can't handle an abstract class as a controller parameter.
            This is not entirely surprising since the class is abstract.
            This class allows the default model binder to handle the situation via a
            hidden parameter.
            The implementation is directly copied from Martin Booth's solution to this
            Stack Overflow question:
            http://stackoverflow.com/questions/5460081/asp-net-mvc-3-defaultmodelbinder-with-inhertance-polymorphism
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.CrewController">
            <summary>
            
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.FishingSetController">
            <summary>
            FishingSetController provides access to fishing sets.  This is currently Purse Seine only,
            as Longline fishing doesn't use the concept of 'Set' and there is no Pole-and-line support
            in TUBS.
            
            NOTE:  Due to referential integrity constraints, the users are not allowed to add a set past
            the maximum set number.  If a set needs to be added, the associated activity from a PS-2 must
            be entered.
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.Gen3Controller">
            <summary>
            
            </summary>
        </member>
        <member name="T:TubsWeb.Core.AuditHelper">
            <summary>
            AuditHelper is a throw-away class used to backfill audit trails while
            a long term solution for the problem of "disappearing" audit trails is
            worked out.
            </summary>
        </member>
        <member name="T:TubsWeb.Core.DateTimeModelBinder">
            <summary>
            Work-around for the "date doesn't work if POSTed" issue
            From here:
            http://weblogs.asp.net/melvynharbour/archive/2008/11/21/mvc-modelbinder-and-localization.aspx
            http://stackoverflow.com/questions/8474768/asp-net-mvc3-force-controller-to-use-date-format-dd-mm-yyyy
            </summary>
        </member>
        <member name="T:TubsWeb.Core.EditorAuthorizeAttribute">
            <summary>
            Configurable editor group authorization attribute.
            Based on implementation here:
            http://weblogs.asp.net/srkirkland/archive/2010/01/04/authorizing-access-via-attributes-in-asp-net-mvc-without-magic-strings.aspx
            </summary>
        </member>
        <member name="T:TubsWeb.Core.ElmahHandledErrorLoggerFilter">
            <summary>
            ExceptionFilter for using ELMAH for logging exceptions that have allegedly been
            handled.  Add to global filters <b>AHEAD OF</b> HandleErrorAttribute.
            Implementation comes from Ivan Zlatev via StackOverflow
            http://stackoverflow.com/questions/766610/how-to-get-elmah-to-work-with-asp-net-mvc-handleerror-attribute
            </summary>
        </member>
        <member name="T:TubsWeb.Core.HandleTransactionManuallyAttribute">
            <summary>
            Attach this attribute to signal that caller is manually handling transaction.
            </summary>
        </member>
        <member name="T:TubsWeb.Core.TransactionalActionBaseAttribute">
            <summary>
            Marker attribute for differentiating between automatic and manual transactions.
            </summary>
        </member>
        <member name="M:TubsWeb.Controllers.HomeController.TripsByYear">
            <summary>
            TripsByYear returns a string representation
            of the count of trips by year.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TubsWeb.Controllers.ObserverController">
            <summary>
            Lookup-only controller for adding Ajax autocomplete capabilities.
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.PortController">
            <summary>
            Lookup-only controller for adding Ajax autocomplete capabilities.
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.SeaDayController">
            <summary>
            SeaDayController manages PS-2 Daily Log data.
            As it's focused on PS-2 data, it only works for
            Purse Seine trips.
            </summary>
        </member>
        <member name="M:TubsWeb.Controllers.SeaDayController.NeedsRedirect(System.Int32,System.Int32,System.Int32)">
            <summary>
            NeedsRedirect validates the dayNumber param for a trip based on the
            action and the number of days already existing for this trip.
            
            The logic is as follows:
            - Index:  Don't care -- Index will cap dayNumber @ maxDays
            - Add:  If dayNumber is a day that already exists, push to Edit.
                    If dayNumber isn't the appropriate value based on maxDays,
                    redirect to Add with the appropriate value
            - Edit: If dayNumber is past the end of the trip, redirect to edit
                    with the final dayNumber
            </summary>
            <param name="tripId">obstrip_id</param>
            <param name="dayNumber">Index (one based) of day number for this trip</param>
            <param name="maxDays">Number of days already added to this trip</param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.SeaDayController.ViewActionImpl(Spc.Ofp.Tubs.DAL.Entities.Trip,System.Int32)">
            <summary>
            The HttpGet portion of the Add/Edit screens is very similar.
            By extracting it all into a single function, there's less copy/paste
            inheritance going on.
            </summary>
            <param name="tripId">Trip parameter (passed as int by the front end, turned into a trip by Model binder)</param>
            <param name="dayNumber">Day Number parameter</param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.SeaDayController.Validate(Spc.Ofp.Tubs.DAL.Entities.Trip,TubsWeb.Models.SeaDayViewModel)">
            <summary>
            Validate checks the validity of the view model.
            Errors are saved via ModelState
            </summary>
            <param name="tripId">Trip model, used for some validation.</param>
            <param name="sdvm">View model to be validated.</param>
        </member>
        <member name="T:TubsWeb.Core.JsonNetResult">
            <summary>
            Replacement JsonResult using the Newtonsoft JSON library.
            This solves problems with the default serializer and it's use
            of WCF dates.  Unfortunately, the MVC model binder doesn't know
            how to handle these dates coming back...
            
            Implementation from here:
            http://stackoverflow.com/questions/6883204/change-default-json-serializer-used-in-asp-mvc3
            </summary>
        </member>
        <member name="T:TubsWeb.Core.KmlResult">
            <summary>
            MVC ActionResult for displaying Kml data.
            </summary>
        </member>
        <member name="T:TubsWeb.Core.LogonAuthorize">
            <summary>
            LogonAuthorize filter based off implementation here:
            http://blogs.msdn.com/b/rickandy/archive/2011/05/02/securing-your-asp-net-mvc-3-application.aspx
            </summary>
        </member>
        <member name="T:TubsWeb.Core.PushpinExtensions">
            <summary>
            Extension methods for working with the Pushpin entity.
            </summary>
        </member>
        <member name="T:TubsWeb.Core.RssResult">
            <summary>
            MVC ActionResult for displaying RSS data.
            Implementation from here:
            http://blogs.msdn.com/b/jowardel/archive/2009/03/11/asp-net-rss-actionresult.aspx
            </summary>
        </member>
        <member name="T:TubsWeb.Core.Security">
            <summary>
            Until such time as I feel like implementing a real security filter, this will serve to
            make implementing update security easier.
            </summary>
        </member>
        <member name="M:TubsWeb.Core.StringExtensions.AsSpcLatitude(System.String)">
            <summary>
            
            </summary>
            <param name="stringValue"></param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Core.StringExtensions.AsSpcLongitude(System.String)">
            <summary>
            
            </summary>
            <param name="stringValue"></param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.TripController.ValidateTripDependencies(Spc.Ofp.Tubs.DAL.Entities.Trip,TubsWeb.Models.TripHeaderViewModel)">
            <summary>
            Check that the required dependent objects are present.
            </summary>
            <param name="trip"></param>
        </member>
        <member name="M:TubsWeb.Controllers.TripController.SearchImpl(Spc.Ofp.Tubs.DAL.SearchCriteria)">
            <summary>
            
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.TripController.ReconciliationSearch(Spc.Ofp.Tubs.DAL.SearchCriteria)">
            <summary>
            For now, this is for TUFMAN/VMS reconciliation. 
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.TripController.Rss">
            <summary>
            Publishes the last 10 trips as a simple RSS feed with the
            Spc trip number, DCT who opened it, and direct link to
            the trip in TUBS.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TubsWeb.Controllers.TripController.Details(Spc.Ofp.Tubs.DAL.Entities.Trip)">
            <summary>
            Retrieves Trip details for display.
            NOTE:  Trip is retrieved by TripModelBinder -- the caller actually passes in the
            integer TripId.  If no such trip exists, the ModelBinder will return null.
            </summary>
            <param name="id">Trip</param>
            <returns></returns>
        </member>
        <member name="T:TubsWeb.Core.TripModelBinder">
            <summary>
            TripModelBinder binds a Trip entity into controller methods.
            </summary>
        </member>
        <member name="M:TubsWeb.Core.TripModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            BindModel binds the trip entity.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns>Trip model if Id represents existing trip, null otherwise.</returns>
        </member>
        <member name="T:TubsWeb.Core.UseTransactionsByDefaultAttribute">
            <summary>
            Much of the ideas behind this implementation come from Scott Kirkland
            However, his implementation is MVC2 only due to a breaking change in MVC3
            http://weblogs.asp.net/srkirkland/archive/2009/11/16/making-asp-net-mvc-actions-be-transactional-by-default.aspx
            </summary>
        </member>
        <member name="T:TubsWeb.Controllers.VesselController">
            <summary>
            Lookup-only controller for adding Ajax autocomplete capabilities.
            </summary>
        </member>
        <member name="T:TubsWeb.Models.ElectronicsViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:TubsWeb.Models.FormExtensions">
            <summary>
            FormExtensions holds the extension methods that convert from
            database reference IDs to actual form values (and vice versa).
            </summary>
        </member>
        <member name="T:TubsWeb.Models.GearUnits">
            <summary>
            GearUnits holds the units of measure for fishing gear.
            </summary>
        </member>
        <member name="F:TubsWeb.Models.GearUnits.UnitFourLarge">
            <summary>
            UnitFourLarge is a subset of all 'Unit 4' units of measure (still not sure what 'Unit 4'
            really is though).
            </summary>
        </member>
        <member name="T:TubsWeb.Models.SeaDayViewModel">
            <summary>
            ViewModel for PS-2 data.
            VERY IMPORTANT NOTE!!!!!!!!
            DON'T USE ARRAYS IN A VIEW MODEL!!!!!
            The default model binder freaks out when it trys to fill an array, and the
            stack trace is worthless.
            
            Second Note:  Dates are crazy in MVC when you don't use WebApi
            Although this has been fixed for now, here's a note about using attributes to control JSON
            serialization.
            http://stackoverflow.com/questions/10527001/asp-net-mvc-controller-json-datetime-serialization-vs-newtonsoft-json-datetime-s
            
            Third Note:  Properties added/removed from root level view model are automatically managed
            by knockout.mapping plugin.  Properties added to SeaDayEvent are _NOT_ managed and need
            to be reflected in the vm.seaday.js file.  Failure to do so will result in LINQ errors
            </summary>
        </member>
        <member name="T:TubsWeb.Models.SeaDayViewModel.SeaDayEvent">
            <summary>
            ViewModel for PS-2 line item.
            </summary>
        </member>
        <member name="T:TubsWeb.Models.TripClosureViewModel">
            <summary>
            Lightweight view model for closing trips.
            </summary>
        </member>
        <member name="T:TubsWeb.Models.TripHeaderViewModel">
            <summary>
            TripHeaderViewModel holds the minimum set of data required to consider an entity a Trip.
            </summary>
        </member>
        <member name="T:TubsWeb.Models.ExtensionMethods.TubsExtensions">
            <summary>
            TubsExtensions currently holds a grab-bag of Extension methods.
            This could no doubt be improved by moving extensions into smaller
            classes and re-factoring code to remove the need for
            these extensions.
            
            Also, the to/from ViewModel stuff should be moved to
            AutoMapper which will improve the readability of the code.
            </summary>
        </member>
        <member name="T:TubsWeb.Models.WellContentsViewModel">
            <summary>
            WellContentsViewModel captures the well contents data collected
            by the observer on PS-1, page 2.
            </summary>
        </member>
    </members>
</doc>
